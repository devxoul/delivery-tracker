name: CD
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACTIONS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACTIONS_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Pull Docker Cache
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
          docker pull docker.pkg.github.com/$GITHUB_REPOSITORY/buildcache || true

      - name: Build Docker Image
        run: |
          cd packages/apiserver
          docker build -t delivery-tracker --cache-from=docker.pkg.github.com/$GITHUB_REPOSITORY/buildcache --build-arg BUILDKIT_INLINE_CACHE=1 .

      - name: Push Docker Cache
        run: |
          docker tag delivery-tracker docker.pkg.github.com/$GITHUB_REPOSITORY/buildcache
          docker push docker.pkg.github.com/$GITHUB_REPOSITORY/buildcache

      - name: Logout from GitHub Packages
        if: always()
        run: docker logout docker.pkg.github.com

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Prepare Docker Metadata
        id: metadata
        run: |
          echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Push Docker Image
        run: |
          docker tag delivery-tracker $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag delivery-tracker $ECR_REGISTRY/$ECR_REPOSITORY:$SHA
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SHA
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: delivery-tracker
          SHA: ${{ steps.metadata.outputs.short_sha }}

      - name: Logout from ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      - name: Run Terraform (dev)
        run: |
          curl --location --request POST 'https://app.terraform.io/api/v2/runs' \
            --header "Authorization: Bearer $TERRAFORM_API_TOKEN" \
            --header 'Content-Type: application/vnd.api+json' \
            --data-raw '{
              "data": {
                "attributes": {
                  "variables": [
                    { "key": "image_tag", "value": "6174867" }
                  ]
                },
                "type": "runs",
                "relationships": {
                  "workspace": {
                    "data": {
                      "type": "workspaces",
                      "id": "ws-JAS3y1sJCPUnKV2L"
                    }
                  }
                }
              }
            }'
        env:
          TERRAFORM_API_TOKEN: ${{ secrets.TERRAFORM_API_TOKEN }}
